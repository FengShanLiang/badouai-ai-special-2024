import numpy as np
import matplotlib.pyplot as plt
from scipy.cluster.hierarchy import dendrogram, linkage

# 创建样本数据
np.random.seed(42)
X = np.random.rand(10, 2)

# 使用层次聚类
Z = linkage(X, 'ward')

# 绘制树状图
plt.figure(figsize=(10, 5))
dendrogram(Z, labels=np.arange(1, len(X)+1))
plt.title('Dendrogram for Hierarchical Clustering')
plt.xlabel('Data Points')
plt.ylabel('Euclidean Distance')
plt.show()



import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import RANSACRegressor
from sklearn.linear_model import LinearRegression

# 创建带噪声的样本数据
np.random.seed(42)
X = np.random.rand(100, 1) * 10
y = 2 * X + 1 + np.random.normal(0, 2, X.shape)

# RANSAC模型
ransac = RANSACRegressor(LinearRegression(), max_trials=100, residual_threshold=2)
ransac.fit(X, y)

# 获取拟合结果
inlier_mask = ransac.inlier_mask_
outlier_mask = ~inlier_mask
line_X = np.arange(X.min(), X.max())[:, np.newaxis]
line_y_ransac = ransac.predict(line_X)

# 可视化
plt.figure(figsize=(10, 5))
plt.scatter(X[inlier_mask], y[inlier_mask], color='yellowgreen', marker='o', label='Inliers')
plt.scatter(X[outlier_mask], y[outlier_mask], color='red', marker='o', label='Outliers')
plt.plot(line_X, line_y_ransac, color='blue', linewidth=2, label='RANSAC Model')
plt.xlabel('X')
plt.ylabel('y')
plt.legend()
plt.show()
